generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model brand {
  id         Int       @id @default(autoincrement())
  name       String
  categoryId Int
  category   category  @relation(fields: [categoryId], references: [id], onDelete: NoAction, map: "Brand_categoryId_fkey")
  product    product[]

  @@index([categoryId], map: "Brand_categoryId_fkey")
}

model category {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  brand       brand[]
  model       model[]
  product     product[]
  variant     variant[]
}

model customer {
  id           Int            @id @default(autoincrement())
  name         String
  address      String
  phone        Int
  invoiceorder invoiceorder[]
}

model detailsales {
  id             Int          @id @default(autoincrement())
  quantity       Int
  price          Float
  productId      Int
  invoiceSalesId Int
  date           DateTime     @default(now())
  invoicesales   invoicesales @relation(fields: [invoiceSalesId], references: [id], onDelete: NoAction, map: "DetailSales_invoiceSalesId_fkey")
  product        product      @relation(fields: [productId], references: [id], onDelete: NoAction, map: "DetailSales_productId_fkey")

  @@index([invoiceSalesId], map: "DetailSales_invoiceSalesId_fkey")
  @@index([productId], map: "DetailSales_productId_fkey")
}

model inventary {
  id             Int     @id @default(autoincrement())
  productId      Int     @unique(map: "Inventary_productId_key")
  productsBought Int
  productsSold   Int
  purchases      Float
  sales          Float
  product        product @relation(fields: [productId], references: [id], onDelete: NoAction, map: "Inventary_productId_fkey")
}

model invoiceorder {
  id         Int      @id @default(autoincrement())
  date       DateTime @default(now())
  total      Float
  debt       Float    @default(0)
  userId     Int
  customerId Int
  state      Boolean  @default(true)
  customer   customer @relation(fields: [customerId], references: [id], onDelete: NoAction, map: "InvoiceOrder_customerId_fkey")
  user       user     @relation(fields: [userId], references: [id], onDelete: NoAction, map: "InvoiceOrder_userId_fkey")
  order      order[]

  @@index([customerId], map: "InvoiceOrder_customerId_fkey")
  @@index([userId], map: "InvoiceOrder_userId_fkey")
}

model invoicesales {
  id          Int           @id @default(autoincrement())
  date        DateTime      @default(now())
  total       Float
  debt        Float         @default(0)
  userId      Int
  supplierId  Int
  state       Boolean       @default(true)
  detailsales detailsales[]
  supplier    supplier      @relation(fields: [supplierId], references: [id], onDelete: NoAction, map: "InvoiceSales_supplierId_fkey")
  user        user          @relation(fields: [userId], references: [id], onDelete: NoAction, map: "InvoiceSales_userId_fkey")

  @@index([supplierId], map: "InvoiceSales_supplierId_fkey")
  @@index([userId], map: "InvoiceSales_userId_fkey")
}

model madein {
  id      Int       @id @default(autoincrement())
  name    String
  product product[]
}

model model {
  id         Int       @id @default(autoincrement())
  name       String
  categoryId Int
  category   category  @relation(fields: [categoryId], references: [id], onDelete: NoAction, map: "Model_categoryId_fkey")
  product    product[]

  @@index([categoryId], map: "Model_categoryId_fkey")
}

model order {
  id             Int          @id @default(autoincrement())
  quantity       Int
  price          Float
  date           DateTime     @default(now())
  productId      Int
  invoiceOrderId Int
  invoiceorder   invoiceorder @relation(fields: [invoiceOrderId], references: [id], onDelete: NoAction, map: "Order_invoiceOrderId_fkey")
  product        product      @relation(fields: [productId], references: [id], onDelete: NoAction, map: "Order_productId_fkey")

  @@index([invoiceOrderId], map: "Order_invoiceOrderId_fkey")
  @@index([productId], map: "Order_productId_fkey")
}

model product {
  id          Int           @id @default(autoincrement())
  name        String
  description String
  categoryId  Int
  number      Int
  url         String
  madeinId    Int
  brandId     Int
  modelId     Int
  variantId   Int
  detailsales detailsales[]
  inventary   inventary?
  order       order[]
  brand       brand         @relation(fields: [brandId], references: [id], onDelete: NoAction, map: "Product_brandId_fkey")
  category    category      @relation(fields: [categoryId], references: [id], onDelete: NoAction, map: "Product_categoryId_fkey")
  madein      madein        @relation(fields: [madeinId], references: [id], onDelete: NoAction, map: "Product_madeinId_fkey")
  model       model         @relation(fields: [modelId], references: [id], onDelete: NoAction, map: "Product_modelId_fkey")
  variant     variant       @relation(fields: [variantId], references: [id], onDelete: NoAction, map: "Product_variantId_fkey")

  @@index([brandId], map: "Product_brandId_fkey")
  @@index([categoryId], map: "Product_categoryId_fkey")
  @@index([madeinId], map: "Product_madeinId_fkey")
  @@index([modelId], map: "Product_modelId_fkey")
  @@index([variantId], map: "Product_variantId_fkey")
}

model supplier {
  id           Int            @id @default(autoincrement())
  name         String
  address      String
  phone        Int
  invoicesales invoicesales[]
}

model user {
  id           Int            @id @default(autoincrement())
  createAt     DateTime       @default(now())
  updateAt     DateTime       @default(now())
  email        String         @unique(map: "User_email_key")
  password     String
  firstName    String
  lastName     String
  invoiceorder invoiceorder[]
  invoicesales invoicesales[]
}

model variant {
  id         Int       @id @default(autoincrement())
  medida     String
  unit       Int
  categoryId Int
  product    product[]
  category   category  @relation(fields: [categoryId], references: [id], onDelete: NoAction, map: "Variant_categoryId_fkey")

  @@index([categoryId], map: "Variant_categoryId_fkey")
}
